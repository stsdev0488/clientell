# Customise this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.62.1"

default_platform :ios

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    # cocoapods
    # carthage
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    sigh
    buildnumber = ENV["BUILD_NUMBER"]
    increment_build_number(
      build_number: buildnumber
    )
    set_info_plist_value(path: "./CallDetectHandler/Info.plist", key: "CFBundleVersion", value: buildnumber)
    gym(scheme: "Clientell",
      clean: true,
      include_symbols: true,
      include_bitcode: true,
      output_directory: "./build/"
      ) # Build your app - more options available
      ENV['DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS'] = '-t DAV'
      pilot(ipa: "./build/Clientell.ipa")
      add_git_tag(
        grouping: "ios",
        prefix: "v",
        build_number: buildnumber
      )
      push_git_tags # Build your app - more options available

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Clientell") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    buildnumber = ENV["BUILD_NUMBER"]
    changelog = changelog_from_git_commits(
        between: [ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'], ENV['GIT_COMMIT']],
        pretty: "* (%h) [%aN] %s"
      )
       changelog = "Empty changelog..." if changelog.to_s.length == 0

    slack(
      message: "Successfully deployed new App Update. Build - ##{buildnumber} \n\n #{changelog}"
    )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
